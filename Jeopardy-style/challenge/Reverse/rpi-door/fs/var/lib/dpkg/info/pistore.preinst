#!/bin/bash
# preinst script for pistore

# Get the current user.
if [ -z "$SUDO_USER" ]
	then
		USERNAME="$USER"
else
	USERNAME="$SUDO_USER"
fi

OSGROUPS=$(groups $USERNAME)

#make sure that indiecity group exists
if [[ "$OSGROUPS" != *indiecity* ]]
	then
		#create an indiecity group
		addgroup indiecity
fi

#add the current user to indiecity group
usermod -a -G indiecity "$USERNAME"

# Setting up our directories in privileged areas.

mkdir -p /usr/share/indiecity
#chmod 777 /usr/share/indiecity #this is not needed as contents does not change

#dont think this is actually needed 
#umask 002 

#allow indiecity group to write to folder
mkdir -p /var/lib/indiecity
chgrp indiecity /var/lib/indiecity
chgrp -R indiecity /var/lib/indiecity/*
chmod g+s /var/lib/indiecity
chmod 775 /var/lib/indiecity 


mkdir -p /usr/local/bin/indiecity
chgrp indiecity /usr/local/bin/indiecity
chgrp -R indiecity /usr/local/bin/indiecity/*
chmod g+s /usr/local/bin/indiecity

#this can be removed if we can move all installer stuff out of the client
#since installers will be running with sudo priveleges
chmod 775 /usr/local/bin/indiecity 

# Let's try to fix any broken installs there may be from previous versions
pushd /usr/local/bin/indiecity > /dev/null

# Locate the XML data files.
XMLDATAFILES=$(find ./InstalledApps/*/Full/*_reg.xml -maxdepth 1)
ERRORCODE="$?"

if [ "$ERRORCODE" = "0" ]
	then
		echo "$XMLDATAFILES" | while read line
			do
				echo "$line"
				APPTYPE=$(grep "<TYPE>" "$line" | sed 's@^.*<TYPE>\(.*\)</TYPE>.*@\1@')

				# We only want to add the executable bit for binary apps.
				if [ "$APPTYPE" = "BINARY" ]
					then
						EXEFILE=$(grep "<EXE>" "$line" | sed 's@^.*<EXE>\(.*\)</EXE>.*@\1@')

						# Check if EXEFILE is an absolute path
						if [ ${EXEFILE:0:1} = "/" ]
							then
								chmod +x "$EXEFILE"
						# Check if EXEFILE exists on the PATH variable
						elif [ -n "$(command -v $EXEFILE)" ]
							then
								chmod +x "$EXEFILE"
						else
							chmod +x "$(dirname $line)/$EXEFILE"
						fi
				fi
		done
fi

popd > /dev/null

# Check if pistore isrunning - if so, we want to shut it down.
PID=`pidof "pistore"`

if [ -n "$PID" ]
	then
		while [ -n "$PID" ]
			do
				kill $PID
				PID=`pidof "pistore"`
				sleep 3
		
				# Increment our cycles count. We want to timeout after 10 failed checks (30s).
				CYCLES=1

				if [ "$CYCLES" -ge 10 ]
					then
						echo "ERROR: pistore doesn't seem to be shutting down. Can't continue."
						exit
				fi
		done

		# Save out that pistore was running so postinst can restart it.
		# Effectively what we're doing here is creating an empty file.
		touch /var/lib/indiecity/pistore/restartclient
fi

exit 0
